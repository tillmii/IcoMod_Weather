/*
  IcoMod_Weather.cpp - IcoDesk Module to display the current weather and the weather forecast.
  Created by Till Michels, February 2, 2023.
*/

#include "Arduino.h"
#include <Adafruit_GFX.h>
#include <Adafruit_ST7735.h>
#include <HTTPClient.h>
#include "IcoMod_Weather.h"
#include <Arduino_JSON.h>

static unsigned char _01d[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x80, 0x01, 0x00, 0x1c, 0x00,
  0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xf8, 0x00, 0x00,
  0x00, 0x00, 0x1f, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00, 0x80, 0x0f, 0x00,
  0x00, 0xe0, 0x03, 0x00, 0x00, 0xc0, 0x07, 0x00, 0x00, 0xc0, 0x03, 0x00,
  0x00, 0xc0, 0x03, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0xc0, 0x01, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc,
  0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x3f, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07,
  0xe0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0xc0, 0x07, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0x01, 0x80, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00,
  0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x1e, 0x00, 0x00,
  0x00, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00,
  0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x3c, 0x00, 0x00,
  0xf0, 0x07, 0x1c, 0x00, 0x00, 0x38, 0xe0, 0x0f, 0xf8, 0x0f, 0x1c, 0x00,
  0x00, 0x38, 0xf0, 0x1f, 0xf8, 0x0f, 0x1c, 0x00, 0x00, 0x38, 0xf0, 0x1f,
  0xf0, 0x07, 0x1c, 0x00, 0x00, 0x38, 0xe0, 0x0f, 0x00, 0x00, 0x3c, 0x00,
  0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x00,
  0x00, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
  0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0x01, 0x80, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03,
  0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0xe0, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x3f, 0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00,
  0x00, 0xc0, 0x01, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x03, 0x00,
  0x00, 0xe0, 0x03, 0x00, 0x00, 0xc0, 0x07, 0x00, 0x00, 0xf0, 0x01, 0x00,
  0x00, 0x80, 0x0f, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
  0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x38, 0x00, 0x80,
  0x01, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static unsigned char _01n[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfe, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff,
  0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0xc3, 0x7f, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0xff, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x3f,
  0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x0f, 0x00, 0xff, 0x00, 0x00,
  0x00, 0x00, 0xfe, 0x07, 0x80, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x03,
  0xc0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xff, 0x01, 0xe0, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0xff, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x00, 0x80, 0x7f, 0x00,
  0xf8, 0x03, 0x00, 0x00, 0x00, 0xc0, 0x3f, 0x00, 0xf8, 0x01, 0x00, 0x00,
  0x00, 0xc0, 0x3f, 0x00, 0xfc, 0x01, 0x00, 0x00, 0x00, 0xc0, 0x1f, 0x00,
  0xfc, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0xfc, 0x00, 0x00, 0x00,
  0x00, 0xe0, 0x0f, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x0f, 0x00,
  0x7e, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x7e, 0x00, 0x00, 0x00,
  0x00, 0xe0, 0x07, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x00,
  0x7e, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x00, 0xfe, 0x00, 0x00, 0x00,
  0x00, 0xf0, 0x03, 0x00, 0xfe, 0x01, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00,
  0xfc, 0x03, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x00, 0xfc, 0x07, 0x00, 0x00,
  0x00, 0xf0, 0x03, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x00,
  0xf0, 0x7f, 0x00, 0x00, 0x00, 0xf0, 0x07, 0x00, 0xe0, 0xff, 0x00, 0x00,
  0x00, 0xe0, 0x0f, 0x00, 0xc0, 0xff, 0x07, 0x00, 0x00, 0xe0, 0x0f, 0x00,
  0x80, 0xff, 0x0f, 0x00, 0x00, 0xc0, 0x0f, 0x00, 0x00, 0xfc, 0x1f, 0x00,
  0x00, 0xc0, 0x1f, 0x00, 0x00, 0xf0, 0x1f, 0x00, 0x00, 0x80, 0x3f, 0x00,
  0x00, 0xc0, 0x1f, 0x00, 0x00, 0x80, 0x7f, 0x00, 0x00, 0xe0, 0x1f, 0x00,
  0x00, 0x00, 0xff, 0x00, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0xff, 0x01,
  0x00, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0xfe, 0x03, 0x00, 0xf8, 0x07, 0x00,
  0x00, 0x00, 0xfc, 0x07, 0x00, 0xfc, 0x07, 0x00, 0x00, 0x00, 0xf8, 0x3f,
  0x00, 0xff, 0x03, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x80, 0xff, 0x01, 0x00,
  0x00, 0x00, 0xe0, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff,
  0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfe, 0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0,
  0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _02d[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0xc0, 0x03,
  0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x3e, 0x00,
  0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xc7,
  0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x0f, 0x3f, 0x00, 0x00,
  0x00, 0x00, 0xff, 0xff, 0x03, 0x7c, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff,
  0x00, 0xf8, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0xf0, 0x01, 0xf0, 0x00, 0x00,
  0x00, 0xe0, 0x03, 0xe0, 0x03, 0xe0, 0x01, 0x00, 0x00, 0xe0, 0x01, 0xc0,
  0x07, 0xe0, 0x01, 0x00, 0x00, 0xf0, 0x01, 0x80, 0x07, 0xe0, 0xc1, 0x07,
  0x00, 0xf0, 0x00, 0x00, 0x0f, 0xe0, 0xe1, 0x0f, 0x00, 0x78, 0x00, 0x00,
  0x1f, 0xe0, 0xc1, 0x07, 0x00, 0x7c, 0x00, 0x00, 0xff, 0xe1, 0x01, 0x00,
  0x00, 0x7f, 0x00, 0x00, 0xfe, 0xf7, 0x01, 0x00, 0x80, 0x3f, 0x00, 0x00,
  0xfc, 0xff, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0x00, 0xc0, 0xff, 0x00, 0x00,
  0xe0, 0x03, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00,
  0x00, 0x7c, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x00, 0x78, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00,
  0x70, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
  0x00, 0x70, 0x18, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3c, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3c, 0x00, 0xf0, 0x01, 0x00, 0x00,
  0x00, 0x3c, 0x38, 0x00, 0xe0, 0x03, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00,
  0xc0, 0x0f, 0x00, 0x00, 0x80, 0x1f, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff,
  0xff, 0x0f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00,
  0x00, 0xfc, 0xff, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff,
  0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static unsigned char _02n[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x1f, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x0f, 0x3c, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xe0, 0x03, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x1f, 0x00,
  0x00, 0x00, 0x00, 0xfe, 0xf1, 0x01, 0x1f, 0x00, 0x00, 0x00, 0xe0, 0xff,
  0xf3, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0x00, 0x1f, 0x00,
  0x00, 0x00, 0xf8, 0xff, 0x7f, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xfe, 0x83,
  0xff, 0x00, 0x3e, 0x00, 0x00, 0x00, 0xff, 0x00, 0xfe, 0x01, 0x7c, 0x00,
  0x00, 0x00, 0x3f, 0x00, 0xf8, 0x03, 0xfc, 0x00, 0x00, 0x80, 0x1f, 0x00,
  0xe0, 0x03, 0xf8, 0x01, 0x00, 0x80, 0x0f, 0x00, 0xe0, 0x07, 0xf0, 0x07,
  0x00, 0xc0, 0x07, 0x00, 0xc0, 0x07, 0xe0, 0x1f, 0x00, 0xe0, 0x07, 0x00,
  0x80, 0x0f, 0xc0, 0x3f, 0x00, 0xe0, 0x03, 0x00, 0x80, 0x1f, 0x80, 0x3f,
  0x00, 0xf0, 0x03, 0x00, 0x00, 0xff, 0x03, 0x3e, 0x00, 0xfc, 0x03, 0x00,
  0x00, 0xff, 0x07, 0x1f, 0x00, 0xff, 0x01, 0x00, 0x00, 0xff, 0x8f, 0x1f,
  0x80, 0xff, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x0f, 0xc0, 0x7f, 0x00, 0x00,
  0x00, 0xfc, 0xff, 0x07, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x03,
  0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01, 0xf0, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xf8, 0x01, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x03,
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03,
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x03, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03,
  0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0xf8, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x03, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03,
  0xf0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x01, 0xe0, 0x07, 0x00, 0x00,
  0x00, 0x00, 0xf8, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00,
  0xc0, 0x7f, 0x00, 0x00, 0x00, 0x80, 0x7f, 0x00, 0x80, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x1f, 0x00,
  0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x3f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _03dn[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff,
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x7f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x0f,
  0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 0xf8, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xfe, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
  0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x80, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x1f, 0x00, 0x80, 0x1f, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00,
  0x00, 0x1f, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x3f, 0x00, 0x00,
  0x00, 0xc0, 0x0f, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0xf0, 0x07, 0x00,
  0x00, 0xfe, 0x0f, 0x00, 0x00, 0xfc, 0x07, 0x00, 0x00, 0xfc, 0x3f, 0x00,
  0x00, 0xfe, 0x03, 0x00, 0x00, 0xfc, 0x7f, 0x00, 0x00, 0xff, 0x03, 0x00,
  0x00, 0xf0, 0xff, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01,
  0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x03, 0xc0, 0x07, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x03, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07,
  0xe0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0xe0, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x07, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07,
  0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xe0, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x07, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07,
  0xe0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0xe0, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x07, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07,
  0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0xc0, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0x03, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01,
  0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0xfe, 0xff, 0xff,
  0xff, 0xff, 0x7f, 0x00, 0x00, 0xfc, 0xff, 0xff, 0xff, 0xff, 0x3f, 0x00,
  0x00, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0xc0, 0xff, 0xff,
  0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _04dn[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xfc, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x3f, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
  0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xf8, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x0f, 0x00, 0xf0, 0x01, 0x00, 0x00, 0x00, 0xfc, 0x7f,
  0x00, 0xe0, 0x03, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x01, 0xc0, 0x03, 0x00,
  0x00, 0x00, 0xff, 0xff, 0x03, 0xc0, 0x1f, 0x00, 0x00, 0x80, 0x1f, 0xe0,
  0x07, 0x80, 0xff, 0x00, 0x00, 0xc0, 0x07, 0xc0, 0x07, 0x80, 0xff, 0x01,
  0x00, 0xc0, 0x03, 0x80, 0x0f, 0x00, 0xfe, 0x03, 0x00, 0xe0, 0x01, 0x00,
  0x1f, 0x00, 0xe0, 0x07, 0x00, 0xf0, 0x01, 0x00, 0x1e, 0x00, 0xc0, 0x07,
  0x00, 0xf0, 0x00, 0x00, 0x7e, 0x00, 0x80, 0x0f, 0x00, 0xf8, 0x00, 0x00,
  0xfc, 0x03, 0x00, 0x0f, 0x00, 0xfe, 0x00, 0x00, 0xfc, 0x0f, 0x00, 0x0f,
  0x80, 0x7f, 0x00, 0x00, 0xf8, 0x1f, 0x00, 0x0e, 0xc0, 0x3f, 0x00, 0x00,
  0xf0, 0x3f, 0x00, 0x0e, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x0f,
  0xe0, 0x03, 0x00, 0x00, 0x00, 0xf8, 0x00, 0x0f, 0xf0, 0x01, 0x00, 0x00,
  0x00, 0xf0, 0x80, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xc1, 0x07,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xe1, 0x03, 0x70, 0x00, 0x00, 0x00,
  0x00, 0xe0, 0xf9, 0x01, 0x70, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf9, 0x01,
  0x70, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x71, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0xe0, 0x01, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x01, 0x00,
  0xf0, 0x01, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xe0, 0x01, 0x00, 0x00,
  0x00, 0xf8, 0x00, 0x00, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00,
  0xc0, 0x3f, 0x00, 0x00, 0x80, 0x7f, 0x00, 0x00, 0x80, 0xff, 0xff, 0xff,
  0xff, 0x3f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00,
  0x00, 0xfc, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0xe0, 0xff, 0xff,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _09dn[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff,
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x7f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x0f,
  0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x03, 0xf8, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xfe, 0x00, 0xf0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00,
  0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x80, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0x1f, 0x00, 0x80, 0x1f, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00,
  0x00, 0x1f, 0x00, 0x00, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x3f, 0x00, 0x00,
  0x00, 0xc0, 0x0f, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0xf0, 0x07, 0x00,
  0x00, 0xfe, 0x0f, 0x00, 0x00, 0xfc, 0x07, 0x00, 0x00, 0xfc, 0x3f, 0x00,
  0x00, 0xfe, 0x03, 0x00, 0x00, 0xfc, 0x7f, 0x00, 0x00, 0xff, 0x03, 0x00,
  0x00, 0xf0, 0xff, 0x00, 0x80, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x01,
  0xc0, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x03, 0xc0, 0x07, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x03, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07,
  0xe0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0xe0, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x07, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07,
  0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xe0, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x80, 0x07, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07,
  0xe0, 0x03, 0x00, 0x00, 0x00, 0x07, 0xc0, 0x07, 0xe0, 0x03, 0x00, 0x0e,
  0x80, 0x07, 0xc0, 0x07, 0xe0, 0x07, 0x00, 0x0f, 0xc0, 0x03, 0xe0, 0x07,
  0xc0, 0x07, 0x80, 0x07, 0xe0, 0x01, 0xe0, 0x03, 0xc0, 0x0f, 0xc0, 0x03,
  0xe0, 0x00, 0xf0, 0x03, 0x80, 0x3f, 0xc0, 0x01, 0x00, 0x00, 0xfc, 0x01,
  0x00, 0xff, 0x00, 0x00, 0x07, 0x00, 0xff, 0x00, 0x00, 0xfe, 0x01, 0x80,
  0x07, 0xc0, 0x7f, 0x00, 0x00, 0xfc, 0x03, 0xc0, 0x03, 0xe0, 0x3f, 0x00,
  0x00, 0xf0, 0x03, 0xe0, 0x01, 0xe0, 0x0f, 0x00, 0x00, 0xc0, 0x81, 0xe3,
  0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0xc0, 0x03, 0xe0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00,
  0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x3c, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _10d[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x70, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00,
  0xf0, 0x00, 0xe0, 0x00, 0x00, 0x00, 0xf0, 0x01, 0x60, 0x00, 0xf0, 0x00,
  0x00, 0x00, 0xe0, 0x03, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0xc0, 0x03,
  0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x80, 0x03, 0x00, 0x00, 0x3e, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x07, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0x8f, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xdf,
  0xff, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x07, 0x7e, 0x00, 0x00,
  0x00, 0x00, 0xff, 0xff, 0x01, 0x78, 0x00, 0x00, 0x00, 0xc0, 0x1f, 0xfc,
  0x01, 0xf0, 0x00, 0x00, 0x00, 0xc0, 0x07, 0xf0, 0x03, 0xe0, 0x00, 0x00,
  0x00, 0xe0, 0x03, 0xc0, 0x07, 0xe0, 0x01, 0x00, 0x00, 0xf0, 0x01, 0x80,
  0x07, 0xc0, 0x01, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x0f, 0xc0, 0x81, 0x0f,
  0x00, 0x78, 0x00, 0x00, 0x0f, 0xc0, 0xc1, 0x1f, 0x00, 0x7c, 0x00, 0x00,
  0x3f, 0xc0, 0x81, 0x0f, 0x00, 0x7e, 0x00, 0x00, 0xfe, 0xe3, 0x01, 0x00,
  0x80, 0x3f, 0x00, 0x00, 0xfe, 0xf7, 0x01, 0x00, 0xc0, 0x3f, 0x00, 0x00,
  0xfc, 0xff, 0x01, 0x00, 0xe0, 0x0f, 0x00, 0x00, 0xc0, 0xff, 0x00, 0x00,
  0xf0, 0x01, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00,
  0x00, 0x3c, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00,
  0x78, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00,
  0x00, 0xf0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00,
  0x38, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00,
  0x1c, 0xf0, 0x18, 0x00, 0x78, 0x00, 0x38, 0x00, 0x1e, 0x78, 0x38, 0x00,
  0xf8, 0x00, 0x3c, 0x00, 0x0f, 0x78, 0x70, 0x00, 0xf0, 0x00, 0x1e, 0x80,
  0x07, 0x7c, 0x60, 0x00, 0xf0, 0x01, 0x0f, 0x80, 0x03, 0x3e, 0x00, 0x00,
  0xe0, 0x07, 0x07, 0x00, 0x00, 0x3f, 0x00, 0x00, 0xc0, 0x1f, 0x00, 0x1c,
  0xc0, 0x1f, 0x00, 0x00, 0x80, 0x1f, 0x00, 0x1e, 0xe0, 0x0f, 0x00, 0x00,
  0x00, 0x1e, 0x00, 0x0f, 0xe0, 0x03, 0x00, 0x00, 0x00, 0x0c, 0x80, 0x07,
  0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x03, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0f, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x80, 0x07, 0xc0,
  0x03, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0xe0, 0x01, 0x00, 0x00, 0x00,
  0x00, 0xc0, 0x01, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _10n[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xff, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x1f, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xe0, 0x03, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x81, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x70, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x78, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x38, 0xc0, 0x03, 0x00,
  0x00, 0x00, 0xe0, 0xff, 0x39, 0xc0, 0x03, 0x00, 0x00, 0x00, 0xf0, 0xff,
  0x1f, 0x80, 0x07, 0x00, 0x00, 0x00, 0xfc, 0x81, 0x3f, 0x80, 0x07, 0x00,
  0x00, 0x00, 0xfe, 0x00, 0x7f, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x3e, 0x00,
  0xfc, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x1f, 0x00, 0xf0, 0x00, 0x3e, 0x00,
  0x00, 0x00, 0x0f, 0x00, 0xf0, 0x01, 0xfc, 0x00, 0x00, 0x80, 0x07, 0x00,
  0xc0, 0x01, 0xf8, 0x03, 0x00, 0xc0, 0x03, 0x00, 0xc0, 0x03, 0xf0, 0x03,
  0x00, 0xc0, 0x03, 0x00, 0x80, 0x07, 0xc0, 0x03, 0x00, 0xe0, 0x03, 0x00,
  0x80, 0xff, 0xc0, 0x03, 0x00, 0xf8, 0x01, 0x00, 0x80, 0xff, 0xf1, 0x01,
  0x00, 0xfe, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0x00, 0x7f, 0x00, 0x00,
  0x00, 0xfe, 0xff, 0x00, 0x80, 0x1f, 0x00, 0x00, 0x00, 0x80, 0x7f, 0x00,
  0x80, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0xc0, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x3e, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00,
  0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0xe0, 0x01, 0x00, 0x00,
  0x00, 0x00, 0x78, 0x00, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
  0xe0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xe0, 0x01, 0x00, 0x00,
  0x00, 0x07, 0x70, 0x00, 0xe0, 0x01, 0x00, 0x0e, 0x80, 0x07, 0x70, 0x00,
  0xe0, 0x01, 0x00, 0x0f, 0xc0, 0x03, 0x78, 0x00, 0xc0, 0x03, 0x80, 0x07,
  0xe0, 0x01, 0x78, 0x00, 0xc0, 0x07, 0xc0, 0x03, 0xe0, 0x00, 0x3c, 0x00,
  0x80, 0x0f, 0xc0, 0x01, 0x00, 0x00, 0x1e, 0x00, 0x80, 0x1f, 0x00, 0x00,
  0x07, 0x00, 0x0f, 0x00, 0x00, 0xff, 0x00, 0x80, 0x07, 0xe0, 0x07, 0x00,
  0x00, 0xfe, 0x01, 0xc0, 0x03, 0xf0, 0x03, 0x00, 0x00, 0xf8, 0x01, 0xe0,
  0x01, 0xf0, 0x00, 0x00, 0x00, 0xe0, 0x80, 0xe3, 0x00, 0x60, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x01,
  0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x78, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x70, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _11dn[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
  0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x07,
  0xfc, 0x01, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x01, 0xf0, 0x01, 0x00, 0x00,
  0x00, 0x00, 0xf8, 0x00, 0xe0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00,
  0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x80, 0x07, 0x00, 0x00,
  0x00, 0x00, 0x3e, 0x00, 0x80, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
  0x80, 0xff, 0x00, 0x00, 0x00, 0x80, 0x1f, 0x00, 0x00, 0xff, 0x03, 0x00,
  0x00, 0xe0, 0x1f, 0x00, 0x00, 0xff, 0x07, 0x00, 0x00, 0xf0, 0x0f, 0x00,
  0x00, 0xfe, 0x0f, 0x00, 0x00, 0xf8, 0x03, 0x00, 0x00, 0xc0, 0x1f, 0x00,
  0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x3c, 0x00, 0x00,
  0x00, 0x00, 0x7c, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00,
  0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x1e, 0x00, 0x00,
  0x00, 0x00, 0x78, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
  0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x1e, 0xe0, 0x07,
  0x0f, 0x0f, 0x70, 0x00, 0x00, 0x1e, 0xe0, 0x07, 0x0f, 0x0f, 0x78, 0x00,
  0x00, 0x1e, 0xf0, 0x03, 0x0f, 0x0f, 0x78, 0x00, 0x00, 0x3e, 0xf0, 0x03,
  0x0f, 0x0f, 0x7c, 0x00, 0x00, 0x7c, 0xf8, 0x81, 0x87, 0x07, 0x3e, 0x00,
  0x00, 0xfc, 0xf8, 0x81, 0x87, 0x07, 0x3f, 0x00, 0x00, 0xf8, 0xfc, 0x80,
  0x87, 0x87, 0x1f, 0x00, 0x00, 0x70, 0xfc, 0x80, 0x87, 0xc7, 0x0f, 0x00,
  0x00, 0x20, 0x7e, 0xc0, 0xc3, 0xe3, 0x07, 0x00, 0x00, 0x00, 0x7e, 0xc0,
  0xc3, 0xe3, 0x01, 0x00, 0x00, 0x00, 0xff, 0xc3, 0xc3, 0x03, 0x00, 0x00,
  0x00, 0x00, 0xff, 0xc7, 0xe3, 0x01, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xe7,
  0xe1, 0x01, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xe3, 0xe1, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xe0, 0xe3, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xe1,
  0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xf0, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x78, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xf0,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x78, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x0e, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x38,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _13dn[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x80, 0x01, 0xc0, 0x03, 0x80, 0x01, 0x00, 0x00, 0xc0, 0x03, 0xc0,
  0x03, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x00,
  0x00, 0x80, 0x01, 0xc0, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00, 0x38, 0xc0,
  0x03, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xc0, 0x03, 0x3e, 0x00, 0x00,
  0x00, 0x00, 0xfc, 0xc0, 0x03, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xc1,
  0x83, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xf8, 0xc3, 0xc3, 0x1f, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0xc7, 0xe3, 0x0f, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xcf,
  0xf3, 0x07, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xdf, 0xfb, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x80, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x7f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xc3, 0xff, 0xff,
  0xff, 0xff, 0xc3, 0x00, 0x80, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x01,
  0x80, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x01, 0x00, 0xc3, 0xff, 0xff,
  0xff, 0xff, 0xc3, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x3f, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff,
  0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xff, 0xff, 0x01, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0xdf, 0xfb, 0x03, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xcf,
  0xf3, 0x07, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xc7, 0xe3, 0x0f, 0x00, 0x00,
  0x00, 0x00, 0xf8, 0xc3, 0xc3, 0x1f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xc1,
  0x83, 0x3f, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xc0, 0x03, 0x3f, 0x00, 0x00,
  0x00, 0x00, 0x7c, 0xc0, 0x03, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x38, 0xc0,
  0x03, 0x1c, 0x00, 0x00, 0x00, 0x80, 0x01, 0xc0, 0x03, 0x80, 0x01, 0x00,
  0x00, 0xc0, 0x03, 0xc0, 0x03, 0xc0, 0x03, 0x00, 0x00, 0xc0, 0x03, 0xc0,
  0x03, 0xc0, 0x03, 0x00, 0x00, 0x80, 0x01, 0xc0, 0x03, 0x80, 0x01, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _50d[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xc0, 0x03, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x07, 0x80, 0x01, 0x60, 0x00, 0x00, 0x00, 0x00, 0x0f,
  0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0xf8, 0x00,
  0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0x18, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf8, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e,
  0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x7f, 0xfe, 0xff, 0x00, 0x00,
  0x00, 0x00, 0xf0, 0xff, 0x1e, 0xf0, 0x01, 0x00, 0x00, 0x00, 0xf8, 0xff,
  0x0f, 0xe0, 0x01, 0x00, 0x00, 0x00, 0xfc, 0xc0, 0x07, 0xc0, 0x03, 0x00,
  0x00, 0x00, 0x3e, 0x00, 0x1f, 0x80, 0x03, 0x00, 0x00, 0x00, 0x1f, 0x00,
  0x1e, 0x80, 0x07, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x3c, 0x80, 0x07, 0x0f,
  0x00, 0x80, 0x07, 0x00, 0x3c, 0x80, 0x87, 0x1f, 0x00, 0x80, 0x07, 0x00,
  0x78, 0x80, 0x87, 0x1f, 0x00, 0xe0, 0x03, 0x00, 0xf8, 0x87, 0x07, 0x0f,
  0x00, 0xf0, 0x03, 0x00, 0xf0, 0xdf, 0x07, 0x00, 0x00, 0xfc, 0x01, 0x00,
  0xf0, 0xff, 0x03, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0xfe, 0x03, 0x00,
  0x00, 0x1e, 0x00, 0x00, 0x00, 0xf8, 0x01, 0x00, 0x00, 0x0f, 0x00, 0x00,
  0x00, 0xf0, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
  0xff, 0xff, 0x70, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00,
  0x00, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff,
  0xff, 0x03, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00,
  0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x07, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00,
  0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _50n[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x07, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0xfc, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x7f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x80, 0x3f, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xc0, 0x0f, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x1e, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xf0, 0x03, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xf0, 0x01, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x80, 0x0f, 0x00,
  0x00, 0x00, 0x00, 0xff, 0xf8, 0x80, 0x0f, 0x00, 0x00, 0x00, 0xf0, 0xff,
  0x79, 0x80, 0x0f, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x7f, 0x80, 0x0f, 0x00,
  0x00, 0x00, 0xfc, 0xff, 0x3f, 0x00, 0x1f, 0x00, 0x00, 0x00, 0xff, 0xc1,
  0x7f, 0x00, 0x1f, 0x00, 0x00, 0x80, 0x7f, 0x00, 0xff, 0x00, 0x3e, 0x00,
  0x00, 0x80, 0x1f, 0x00, 0xfc, 0x01, 0x7e, 0x00, 0x00, 0xc0, 0x0f, 0x00,
  0xf0, 0x01, 0xfc, 0x00, 0x00, 0xc0, 0x07, 0x00, 0xf0, 0x03, 0xf8, 0x03,
  0x00, 0xe0, 0x03, 0x00, 0xe0, 0x03, 0xf0, 0x0f, 0x00, 0xf0, 0x03, 0x00,
  0xc0, 0x07, 0xe0, 0x1f, 0x00, 0xf0, 0x01, 0x00, 0xc0, 0x0f, 0xc0, 0x1f,
  0x00, 0xf8, 0x01, 0x00, 0x80, 0xff, 0x01, 0x1f, 0x00, 0xfe, 0x01, 0x00,
  0x80, 0xff, 0x83, 0x0f, 0x00, 0xfe, 0x00, 0x00, 0x80, 0xff, 0xc7, 0x0f,
  0x00, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x07, 0x00, 0x3f, 0x00, 0x00,
  0x00, 0xfe, 0xff, 0x03, 0x00, 0x0f, 0x00, 0x00, 0x00, 0xe0, 0xff, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x01,
  0x00, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0xf0, 0x01, 0x00, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xf0, 0x01, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x01,
  0x00, 0xfe, 0xff, 0xff, 0xff, 0x7f, 0xe0, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff, 0xff,
  0xff, 0x03, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x07, 0x00, 0x00,
  0xf0, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x07, 0x00, 0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00,
  0x00, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x0f, 0x00, 0x00, 0xf0, 0xff, 0xff,
  0xff, 0xff, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};

static unsigned char _01d_16x16[] = {
  0x20, 0x04, 0x42, 0x42, 0x04, 0x20, 0xc8, 0x13, 0x60, 0x06, 0x31, 0x8c,
  0x1a, 0x58, 0x08, 0x10, 0x08, 0x10, 0x1a, 0x58, 0x31, 0x8c, 0x60, 0x06,
  0xc8, 0x13, 0x04, 0x20, 0x42, 0x42, 0x20, 0x04 
};
static unsigned char _01n_16x16[] = {
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0x30, 0x0c, 0x18, 0x18, 0x0c, 0x0c,
  0x04, 0x06, 0x04, 0x02, 0x04, 0x02, 0x04, 0x06, 0x0c, 0x0c, 0x18, 0x18,
  0x30, 0x0c, 0xe0, 0x07, 0x00, 0x00, 0x00, 0x00 
};
static unsigned char _02d_16x16[] = {
  0x00, 0x00, 0x00, 0x44, 0x00, 0x29, 0x00, 0x82, 0x00, 0x38, 0xe0, 0x45,
  0x30, 0x46, 0x18, 0x4c, 0x0c, 0x38, 0x06, 0xa0, 0x02, 0x40, 0x03, 0x40,
  0x01, 0x40, 0x03, 0x60, 0xfe, 0x3f, 0x00, 0x00 
};
static unsigned char _02n_16x16[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x4c, 0x00, 0x24, 0xe0, 0x23,
  0x30, 0x66, 0x18, 0xcc, 0x0c, 0x98, 0x06, 0x60, 0x02, 0x40, 0x03, 0x40,
  0x01, 0x40, 0x03, 0x60, 0xfe, 0x3f, 0x00, 0x00 
};
static unsigned char _03dn_16x16[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0x30, 0x06, 0x18, 0x1c,
  0x0c, 0x30, 0x06, 0x60, 0x02, 0xc0, 0x03, 0x80, 0x01, 0x80, 0x03, 0xc0,
  0xfe, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};
static unsigned char _04dn_16x16[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0xc0, 0x08, 0xb0, 0x31,
  0x18, 0x63, 0x0e, 0xc4, 0x03, 0x88, 0x01, 0xd8, 0x01, 0x10, 0x03, 0x18,
  0xfe, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
};
static unsigned char _09dn_16x16[] = {
  0x00, 0x00, 0x00, 0x00, 0xe0, 0x03, 0x30, 0x06, 0x18, 0x0c, 0x0c, 0x18,
  0x06, 0x60, 0x02, 0xc0, 0x03, 0x80, 0x41, 0xc8, 0x23, 0x65, 0x8e, 0x30,
  0x20, 0x02, 0x10, 0x01, 0x00, 0x00, 0x00, 0x00 
};
static unsigned char _10d_16x16[] = {
  0x00, 0x44, 0x00, 0x29, 0x00, 0x82, 0x00, 0x38, 0xe0, 0x45, 0x30, 0x46,
  0x18, 0x4c, 0x0c, 0x38, 0x06, 0xa0, 0x02, 0x40, 0x03, 0x40, 0x41, 0x48,
  0x23, 0x65, 0x8e, 0x30, 0x20, 0x02, 0x10, 0x01 
};
static unsigned char _10n_16x16[] = {
  0x00, 0x00, 0x00, 0x38, 0x00, 0x4c, 0x00, 0x24, 0xe0, 0x23, 0x30, 0x66,
  0x18, 0xcc, 0x0c, 0x98, 0x06, 0x60, 0x02, 0x40, 0x03, 0x40, 0x41, 0x48,
  0x23, 0x65, 0x8e, 0x30, 0x20, 0x02, 0x10, 0x01 
};
static unsigned char _11dn_16x16[] = {
  0xe0, 0x03, 0x30, 0x06, 0x18, 0x0c, 0x0c, 0x38, 0x0e, 0x78, 0x03, 0xc0,
  0x01, 0x80, 0x31, 0x89, 0x33, 0xc9, 0x1a, 0x6d, 0x98, 0x0d, 0xb8, 0x05,
  0xb0, 0x04, 0x98, 0x00, 0x88, 0x00, 0x08, 0x00 
};
static unsigned char _13dn_16x16[] = {
  0x80, 0x01, 0x02, 0x40, 0x84, 0x21, 0x80, 0x01, 0xb0, 0x0d, 0xf0, 0x0f,
  0xe0, 0x07, 0xfd, 0xbf, 0xfd, 0xbf, 0xe0, 0x07, 0xf0, 0x0f, 0xb0, 0x0d,
  0x80, 0x01, 0x84, 0x21, 0x02, 0x40, 0x80, 0x01 
};
static unsigned char _50d_16x16[] = {
  0x00, 0x44, 0x00, 0x29, 0x00, 0x82, 0x00, 0x38, 0xe0, 0x45, 0x30, 0x47,
  0x18, 0x4c, 0x0c, 0x38, 0x06, 0xb0, 0x00, 0x20, 0xfe, 0x0f, 0x00, 0x00,
  0xff, 0x07, 0x00, 0x00, 0xf8, 0x1f, 0x00, 0x00 
};
static unsigned char _50n_16x16[] = {
  0x00, 0x00, 0x00, 0x1c, 0x00, 0x26, 0x00, 0x12, 0xe0, 0x11, 0x30, 0x33,
  0x18, 0x66, 0x0c, 0x4c, 0x06, 0x38, 0x00, 0x20, 0xfe, 0x0f, 0x00, 0x00,
  0xff, 0x07, 0x00, 0x00, 0xf8, 0x1f, 0x00, 0x00 
};

IcoMod_Weather::IcoMod_Weather(Adafruit_ST7735 *tft, const char *city, const char *privateKey, unsigned long refreshTime)
{
  _tft = tft;
  _city = city;
  _privateKey = privateKey;
  _refreshTime = refreshTime;

  _showCurrentWeather = true;
}

bool stringFitsOnScreen(Adafruit_ST7735 *tft, const String &textBuf, uint16_t x, uint16_t y, uint8_t textSize, uint16_t textColor)
{
  tft->setTextSize(textSize);
  tft->setTextColor(textColor);

  int16_t x1, y1;
  uint16_t comparisonSize[2] = {0, 0};
  uint16_t size[2] = {0, 0};

  tft->getTextBounds("A", 0, 0, &x1, &y1, &comparisonSize[0], &comparisonSize[1]);
  tft->getTextBounds(textBuf, x, y, &x1, &y1, &size[0], &size[1]);

  Serial.print("CompSize: ");
  Serial.println(comparisonSize[1]);
  Serial.print("Size: ");
  Serial.println(size[1]);
  Serial.print("String: ");
  Serial.println(textBuf);

  return size[1] == comparisonSize[1];
}

void printTextCentered(Adafruit_ST7735 *tft, const String &textBuf, uint16_t x, uint16_t y, uint8_t textSize, uint16_t textColor)
{
  int16_t x1, y1;
  uint16_t size[2] = {0, 0};
  tft->setTextSize(textSize);
  tft->setTextColor(textColor);
  tft->getTextBounds(textBuf, 0, 0, &x1, &y1, &size[0], &size[1]); // calc width of new string
  tft->setCursor(x - size[0] / 2, y - size[1] / 2);
  tft->print(textBuf);
}

void printLinesCentered(Adafruit_ST7735 *tft, const String &textBuf, uint16_t x, uint16_t y, uint8_t textSize, uint16_t textColor)
{
  // Check if whole string fits
  if (stringFitsOnScreen(tft, textBuf, x, y, textSize, textColor))
  {
    Serial.print("The String: ");
    Serial.print(textBuf);
    Serial.println(" fits on screen.");
    printTextCentered(tft, textBuf, x, y, textSize, textColor);
    return;
  }

  int16_t x1, y1;
  uint16_t comparisonSize[2] = {0, 0};
  uint16_t size[2] = {0, 0};

  String str = textBuf;
  String words[20];
  int wordCount = 0;

  // Split the string into substrings
  while (str.length() > 0)
  {
    int index = str.indexOf(' ');
    if (index == -1) // No space found
    {
      words[wordCount++] = str;
      break;
    }
    else
    {
      words[wordCount++] = str.substring(0, index);
      str = str.substring(index + 1);
    }
  }

  String line = "";
  for (int i = 0; i < wordCount - 1; i++)
  {
    line += words[i] + " ";

    // Check if next line would fit
    if (!stringFitsOnScreen(tft, line + words[i + 1], x, y, textSize, textColor))
    {
      printTextCentered(tft, line, x, y, textSize, textColor);

      String tail = "";
      for (int j = i + 1; j < wordCount; j++)
      {
        tail += words[j] + " ";
      }
      printLinesCentered(tft, tail, x, y + comparisonSize[1] + 10, textSize, textColor);
      return;
    }
  }
}

String httpGETRequest(const char *serverName)
{
  WiFiClient client;
  HTTPClient http;

  // Your Domain name with URL path or IP address with path
  http.begin(client, serverName);

  // Send HTTP POST request
  int httpResponseCode = http.GET();

  String payload = "{}";

  if (httpResponseCode > 0)
  {
    Serial.print("HTTP Response code: ");
    Serial.println(httpResponseCode);
    payload = http.getString();
  }
  else
  {
    Serial.print("Error code: ");
    Serial.println(httpResponseCode);
  }

  // Free resources
  http.end();

  return payload;
}

void drawCurrentWeather(Adafruit_ST7735* tft, JSONVar weatherData)
{
  tft->fillScreen(ST77XX_BLACK);

  // Draw icon
  int spacingTop = 10;
  String iconString = weatherData["weather"][0]["icon"];
  if (iconString == "01d")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _01d, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "01n")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _01n, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "02d")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _02d, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "02n")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _02n, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "03d" || iconString == "03n")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _03dn, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "04d" || iconString == "04n")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _04dn, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "09d" || iconString == "09n")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _09dn, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "10d")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _10d, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "10n")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _10n, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "11d" || iconString == "11n")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _11dn, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "13d" || iconString == "13n")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _13dn, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "50d")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _50d, 64, 64, ST7735_WHITE);
  }
  else if (iconString == "50n")
  {
    tft->drawXBitmap(tft->width() / 2 - 32, spacingTop, _50n, 64, 64, ST7735_WHITE);
  }

  // Print temp
  int roundedTemp = (int)round((double)weatherData["main"]["temp"]);
  printTextCentered(tft, String(roundedTemp), tft->width() / 2 - 6, spacingTop * 3 + 64, 3, ST7735_WHITE);

  tft->setTextSize(2);
  tft->setCursor(tft->getCursorX(), tft->getCursorY() - 2 * 5);
  tft->print("o");

  // Print description
  printLinesCentered(tft, weatherData["weather"][0]["description"], tft->width() / 2, tft->height() / 6 * 5, 1, ST7735_WHITE);
}

String getWeekDay(int day)
{
  switch(day)
  {
    case 0:
      return "Sun";
    case 1:
      return "Mon";
    case 2:
      return "Tue";
    case 3:
      return "Wed";
    case 4:
      return "Thu";
    case 5:
      return "Fri";
    case 6:
      return "Sat";
  }
  return "Error: Day must be between 0 and 6...";
}

void drawWeatherForecast(Adafruit_ST7735* tft, JSONVar *weatherData)
{
  tft->fillScreen(ST77XX_BLACK);
  tft->setTextSize(2);

  // Serial.print("WeatherData: ");
  // Serial.println((*weatherData)["cod"]);
  // Serial.println((*weatherData)["list"]);
  // Serial.println((*weatherData)["list"].length());

  int j = 0;
  for (int i = 0; i < (*weatherData)["list"].length(); i++)
  {
    long dt = (long)(*weatherData)["list"][i]["dt"];
    if (dt % 43200 == 0 && dt % 86400 != 0) 
    {
      j++;

      tft->setTextSize(2);

      int height = tft->height() / 6 * (j) - 8;
      tft->setCursor(10, height);

      // Serial.print("Temperature: ");
      // Serial.println((int)round((double)(*weatherData)["list"][i]["main"]["temp"]));

      // Print day
      tft->print(getWeekDay((int)(floor(dt / 86400) + 4) % 7));

      // Draw icon
      String iconString = (*weatherData)["list"][i]["weather"][0]["icon"];
      int spacing = 12;
      if (iconString == "01d")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _01d_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "01n")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _01n_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "02d")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _02d_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "02n")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _02n_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "03d" || iconString == "03n")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _03dn_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "04d" || iconString == "04n")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _04dn_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "09d" || iconString == "09n")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _09dn_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "10d")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _10d_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "10n")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _10n_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "11d" || iconString == "11n")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _11dn_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "13d" || iconString == "13n")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _13dn_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "50d")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _50d_16x16, 16, 16, ST7735_WHITE);
      }
      else if (iconString == "50n")
      {
        tft->drawXBitmap(tft->getCursorX() + spacing, height, _50n_16x16, 16, 16, ST7735_WHITE);
      }

      // Print temp
      String temp = String((int)round((double)(*weatherData)["list"][i]["main"]["temp"]));
      int strSpace = temp.length() * 10 + (temp.length() - 1) * 2 + 2 + 6 + 10; // chars with text size 2 + spacing + char with text size 1 + spacing + spacing to right edge
      tft->setCursor(tft->width() + - strSpace, height);
      tft->print(temp);

      // int cursorPos[2] = { tft->getCursorX(), tft->getCursorY() };
      tft->setTextSize(1);
      tft->setCursor(tft->getCursorX(), tft->getCursorY() - 5); // 5 -> 5 * (text size from °)
      tft->print("o");
      // tft->setCursor(cursorPos[0], cursorPos[1]);
      // tft->setTextSize(2);
      // tft->print(" ");
    }
  }
}

void IcoMod_Weather::onClick()
{
  _showCurrentWeather = !_showCurrentWeather;
  _lastRefresh = millis();
}

void IcoMod_Weather::initialize()
{
  _lastRefresh = millis();
}

void IcoMod_Weather::refresh()
{
  static String url = "";
  
  static String jsonBuffer = "";

  if (millis() >= _lastRefresh)
  {
    _lastRefresh += _refreshTime;

    url = _showCurrentWeather ? "http://api.openweathermap.org/data/2.5/weather?q=" : "http://api.openweathermap.org/data/2.5/forecast?q=";
    url += String(_city) + "&units=metric" + "&appid=" + String(_privateKey);

    if (WiFi.status() != WL_CONNECTED)
    {
      Serial.println("Can't fetch weather data. WiFi Disconnected...");
      return;
    }

    Serial.print("URL: ");
    Serial.println(url);

    jsonBuffer = httpGETRequest(url.c_str());

    JSONVar weatherData = JSON.parse(jsonBuffer);

    if (JSON.typeof(weatherData) == "undefined")
    {
      Serial.println("Parsing weather data failed!");
      return;
    }

    // Serial.print("WeatherData: ");
    // Serial.println(weatherData);

    _showCurrentWeather ? drawCurrentWeather(_tft, weatherData) : drawWeatherForecast(_tft, &weatherData);
  }
}